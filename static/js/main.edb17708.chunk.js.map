{"version":3,"sources":["fbase.js","components/Nweet.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["auth","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","db","getFirestore","storage","getStorage","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","toggleEditing","prev","onSubmit","event","preventDefault","updateDoc","className","type","placeholder","value","onChange","target","required","onClick","src","width","height","alt","icon","faTrash","faPencilAlt","Profile","refreshUser","userObj","history","useHistory","displayName","newDisplayName","setNewDisplayName","nweets","setNweets","getMyNweets","useCallback","q","query","collection","where","uid","orderBy","getDocs","querySnapshot","docs","map","data","useEffect","user","currentUser","updateProfile","autoFocus","style","marginTop","signOut","push","nweet","index","creatorId","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","code","customData","fetchSignInMethodsForEmail","methods","faTwitter","color","size","marginBottom","faGoogle","faGithub","NweetFactory","setNweet","attachment","setAttachment","attachmentRef","uuidv4","uploadString","response","getDownloadURL","createdAt","Date","now","addDoc","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","readAsDataURL","opacity","backgroundImage","faTimes","Home","onSnapshot","snapshot","nweetArray","document","getNweets","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","Boolean","getFullYear","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.edb17708.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth();\r\nexport const db = getFirestore();\r\nexport const storage = getStorage();\r\nexport default app;\r\n","import { deleteDoc, doc, updateDoc } from \"@firebase/firestore\";\r\nimport { deleteObject, ref } from \"@firebase/storage\";\r\nimport { db, storage } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await deleteDoc(doc(db, `nweets/${nweetObj.id}`));\r\n      if (nweetObj.attachmentUrl) {\r\n        await deleteObject(ref(storage, nweetObj.attachmentUrl));\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => {\r\n    setEditing((prev) => !prev);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await updateDoc(doc(db, `nweets/${nweetObj.id}`), { text: newNweet });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    setNewNweet(nweetObj.text);\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Edit your nweet\"\r\n                  value={newNweet}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n              </form>\r\n              <button onClick={toggleEditing}>Cancel</button>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img\r\n              src={nweetObj.attachmentUrl}\r\n              width=\"50px\"\r\n              height=\"50px\"\r\n              alt=\"nweet\"\r\n            />\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { updateProfile } from \"@firebase/auth\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"@firebase/firestore\";\r\nimport Nweet from \"components/Nweet\";\r\nimport { auth, db } from \"fbase\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const [nweets, setNweets] = useState([]);\r\n  const onLogOutClick = () => {\r\n    auth.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const getMyNweets = useCallback(async () => {\r\n    const q = query(\r\n      collection(db, \"nweets\"),\r\n      where(\"creatorId\", \"==\", userObj.uid),\r\n      orderBy(\"createdAt\", \"desc\")\r\n    );\r\n\r\n    const querySnapshot = await getDocs(q);\r\n    setNweets(querySnapshot.docs.map((doc) => doc.data()));\r\n  }, [userObj]);\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, [getMyNweets]);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      const user = auth.currentUser;\r\n      await updateProfile(user, {\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          onChange={onChange}\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet, index) => (\r\n          <Nweet\r\n            key={index}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"@firebase/auth\";\r\nimport { auth } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let data;\r\n    try {\r\n      if (newAccount) {\r\n        // create account\r\n        data = await createUserWithEmailAndPassword(auth, email, password);\r\n      } else {\r\n        // log in\r\n        data = await signInWithEmailAndPassword(auth, email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => {\r\n    setNewAccount((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { auth } from \"fbase\";\r\nimport {\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n  signInWithPopup,\r\n  fetchSignInMethodsForEmail,\r\n} from \"@firebase/auth\";\r\nimport React, { useState } from \"react\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const [error, setError] = useState(\"\");\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new GithubAuthProvider();\r\n    }\r\n\r\n    try {\r\n      await signInWithPopup(auth, provider);\r\n    } catch (error) {\r\n      if (error.code === \"auth/account-exists-with-different-credential\") {\r\n        const {\r\n          customData: { email },\r\n        } = error;\r\n        const methods = await fetchSignInMethodsForEmail(auth, email);\r\n        setError(`${email} is already ${methods[0]} account`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        {error && <span className=\"authError\">{error}</span>}\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { addDoc, collection } from \"@firebase/firestore\";\r\nimport { getDownloadURL, ref, uploadString } from \"@firebase/storage\";\r\nimport { db, storage } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n\r\n    event.preventDefault();\r\n\r\n    try {\r\n      let attachmentUrl = \"\";\r\n      if (attachment !== \"\") {\r\n        // attachmentRef = firebase storage에서 사용자/'파일의 랜덤 이름 '\r\n        const attachmentRef = ref(storage, `${userObj.uid}/${uuidv4()}`);\r\n        const response = await uploadString(\r\n          attachmentRef,\r\n          attachment,\r\n          \"data_url\"\r\n        );\r\n        attachmentUrl = await getDownloadURL(response.ref);\r\n      }\r\n\r\n      const nweetObj = {\r\n        text: nweet,\r\n        createdAt: Date.now(),\r\n        creatorId: userObj.uid,\r\n        attachmentUrl,\r\n      };\r\n      await addDoc(collection(db, \"nweets\"), nweetObj);\r\n    } catch (e) {\r\n      console.error(\"Error adding document: \", e);\r\n    }\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        target: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          type=\"text\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n            alt=\"thumbnail\"\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import { collection, onSnapshot, orderBy, query } from \"@firebase/firestore\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport { db } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  const getNweets = () => {\r\n    const q = query(collection(db, \"nweets\"), orderBy(\"createdAt\", \"desc\"));\r\n    onSnapshot(q, (snapshot) => {\r\n      const nweetArray = snapshot.docs.map((document) => ({\r\n        id: document.id,\r\n        ...document.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getNweets();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        <>\r\n          {isLoggedIn ? (\r\n            <div\r\n              style={{\r\n                maxWidth: 890,\r\n                width: \"100%\",\r\n                margin: \"0 auto\",\r\n                marginTop: 80,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n              </Route>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <Route exact path=\"/\">\r\n                <Auth />\r\n              </Route>\r\n            </>\r\n          )}\r\n        </>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { auth } from \"fbase\";\r\nimport { onAuthStateChanged } from \"@firebase/auth\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        // signed in\r\n        const name = user.displayName === null ? \"뉴비\" : user.displayName;\r\n        setUserObj({\r\n          displayName: name,\r\n          uid: user.uid,\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n  const refreshUser = () => {\r\n    const user = auth.currentUser;\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter\r\n          refreshUser={refreshUser}\r\n          isLoggedIn={Boolean(userObj)}\r\n          userObj={userObj}\r\n        />\r\n      ) : (\r\n        \"Initializing...\"\r\n      )}\r\n      <footer\r\n        style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}\r\n      >\r\n        &copy;{new Date().getFullYear()} Nwitter\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./styles.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}